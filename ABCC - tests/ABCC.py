# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ACC.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.Qt import QThreadPool, QRunnable
from PyQt5.Qt import QThread
import threading
import logging
import os
import main

logging.basicConfig(filename="LOG.txt", filemode="a", level=logging.INFO, format="%(asctime)s %(message)s")
mainThread = main.mainOne()
openDoc_flag = False
openLogFile_flag = False
listenFlag = False


class startMainWorker(threading.Thread):
    """Worker that starts voice coding"""
    def run(self):
        mainThread.startListening()

class startWorkerLOG(threading.Thread):
    """Worker that opens Log"""

    def run(self):
        global openLogFile_flag
        while True:
            if openLogFile_flag:
                os.system('notepad.exe LOG.txt')
                openLogFile_flag = False


class startWorkerDOC(threading.Thread):
    """Worker that opens document"""

    def run(self):
        global openDoc_flag
        while True:
            if openDoc_flag:
                os.system('ABCC.docx')
                openDoc_flag = False


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(500, 400)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setContentsMargins(10, 10, 10, 10)
        self.verticalLayout.setObjectName("verticalLayout")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setStyleSheet("QFrame{\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:1, y2:0, stop:0 rgba(238, 112, 14, 255), stop:1 rgba(255, 255, 255, 255));\n"
"border-radius:10px;\n"
"\n"
"}")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.Title = QtWidgets.QLabel(self.frame)
        self.Title.setGeometry(QtCore.QRect(0, 30, 481, 61))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(30)
        self.Title.setFont(font)
        self.Title.setStyleSheet("background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0 rgba(255, 255, 255, 0), stop:0.987624 rgba(33, 30, 255, 0));\n"
"color: rgb(118, 36, 37);")
        self.Title.setAlignment(QtCore.Qt.AlignCenter)
        self.Title.setObjectName("Title")
        self.StartButton = QtWidgets.QPushButton(self.frame)
        self.StartButton.setGeometry(QtCore.QRect(190, 170, 100, 100))
        self.StartButton.setBaseSize(QtCore.QSize(100, 100))
        self.StartButton.setAutoFillBackground(False)
        self.StartButton.setStyleSheet("QPushButton {\n"
"    color: #333;\n"
"    border: 2px solid #555;\n"
"    border-radius: 50px;\n"
"    border-style: outset;\n"
"    padding: 5px;\n"
"    image: url(microphone.png);\n"
"    \n"
"    }\n"
"\n"
"QPushButton:hover {\n"
"border-color: rgb(255, 85, 0);\n"
"\n"
"    }\n"
"\n"
"QPushButton:pressed {\n"
"    border-style: inset;\n"
"    background: qradialgradient(\n"
"        cx: 0.4, cy: -0.1, fx: 0.4, fy: -0.1,\n"
"        radius: 1.35, stop: 0 #fff, stop: 1 #ddd\n"
"        );\n"
"    }")
        self.StartButton.setText("")
        self.StartButton.setObjectName("StartButton")
        self.SubTitle = QtWidgets.QLabel(self.frame)
        self.SubTitle.setGeometry(QtCore.QRect(0, 90, 481, 51))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(12)
        self.SubTitle.setFont(font)
        self.SubTitle.setStyleSheet("background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0 rgba(255, 255, 255, 0), stop:0.987624 rgba(33, 30, 255, 0));\n"
"color: rgb(180, 90, 0);")
        self.SubTitle.setAlignment(QtCore.Qt.AlignCenter)
        self.SubTitle.setWordWrap(True)
        self.SubTitle.setObjectName("SubTitle")
        self.LogsButtno = QtWidgets.QPushButton(self.frame)
        self.LogsButtno.setGeometry(QtCore.QRect(10, 350, 65, 20))
        self.LogsButtno.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border-radius: 10px;\n"
"color: rgb(255, 85, 0);")
        self.LogsButtno.setObjectName("LogsButtno")
        self.DocumentationButton = QtWidgets.QPushButton(self.frame)
        self.DocumentationButton.setGeometry(QtCore.QRect(380, 10, 91, 21))
        self.DocumentationButton.setStyleSheet("background-color: rgb(255, 85, 0);\n"
"border-radius: 10px;\n"
"color: rgb(255, 255, 255);")
        self.DocumentationButton.setObjectName("DocumentationButton")
        self.VoiceAnimation = QtWidgets.QLabel(self.frame)
        self.VoiceAnimation.setGeometry(QtCore.QRect(400, 320, 91, 71))
        self.VoiceAnimation.setAutoFillBackground(False)
        self.VoiceAnimation.setStyleSheet("image: url('animation_500_kisoec7b.gif');\n"
"background-color: rgba(255, 255, 255, 0);")
        self.VoiceAnimation.setText("")
        self.VoiceAnimation.setScaledContents(True)
        self.VoiceAnimation.setObjectName("VoiceAnimation")
        self.verticalLayout.addWidget(self.frame)
        MainWindow.setCentralWidget(self.centralwidget)
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)


    def openLog(self):
        try:
            global openLogFile_flag
            openLogFile_flag = True
        except Exception as e:
            logging.info(e)


    def openDOC(self):
        try:
            global openDoc_flag
            openDoc_flag = True
        except Exception as e:
            logging.info(e)


    def ListenButtonClick(self):
        try:
            global listenFlag
            if listenFlag:
                listenFlag = False
                mainThread.stopListening()
            else:
                listenFlag = True
                mainThread.resumeListening()
        except Exception as e:
            logging.info(e)


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "ABCC- Voice Based Coding"))
        MainWindow.setWindowIcon(QtGui.QIcon("animation_500_kisoec7b.gif"))
        self.Title.setText(_translate("MainWindow", "AnyBody Can Code"))
        self.SubTitle.setText(_translate("MainWindow", "A Speech based platform for learning to code, especially for visually challenged."))
        self.LogsButtno.setText(_translate("MainWindow", "Logs"))
        self.DocumentationButton.setText(_translate("MainWindow", "Documentation"))
        self.DocumentationButton.clicked.connect(self.openDOC)
        self.LogsButtno.clicked.connect(self.openLog)
        self.StartButton.clicked.connect(self.ListenButtonClick)


class GUIThread(threading.Thread):
    def run(self):
        import sys
        app = QtWidgets.QApplication(sys.argv)
        MainWindow = QtWidgets.QMainWindow()
        ui = Ui_MainWindow()
        ui.setupUi(MainWindow)
        MainWindow.show()
        sys.exit(app.exec_())


if __name__ == "__main__":
    GuiThread = GUIThread()
    GuiThread.start()
    ListenerThread = startMainWorker()
    ListenerThread.start()
    LogThread = startWorkerLOG()
    LogThread.start()
    DocThread = startWorkerDOC()
    DocThread.start()
    GuiThread.join()
    ListenerThread.join()
    LogThread.join()
    DocThread.join()

